   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"crypto.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.encrypt,"ax",%progbits
  19              		.align	1
  20              		.global	encrypt
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	encrypt:
  26              	.LVL0:
  27              	.LFB3:
  28              		.file 1 "crypto.c"
   1:crypto.c      **** /* Source file for the homebrewn crypto used in assignment 2
   2:crypto.c      ****  *
   3:crypto.c      ****  * Copyright 2018 TUM
   4:crypto.c      ****  * Created: 2018-11-15 Florian Wilde <florian.wilde@tum.de>
   5:crypto.c      ****  **************************************************************************************************
   6:crypto.c      **** 
   7:crypto.c      **** #include <stdint.h>
   8:crypto.c      **** #include <string.h>
   9:crypto.c      **** #include <malloc.h>
  10:crypto.c      **** #include "crypto.h"
  11:crypto.c      **** 
  12:crypto.c      **** uint8_t encrypt(uint8_t *ciphertext[],
  13:crypto.c      ****                 const uint8_t *plaintext, const size_t plaintext_len,
  14:crypto.c      ****                 const uint8_t *nonce, const uint8_t *key ) {
  29              		.loc 1 14 60 view -0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 136
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 14 60 is_stmt 0 view .LVU1
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 A3B0     		sub	sp, sp, #140
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 160
  45 0004 0546     		mov	r5, r0
  46 0006 1446     		mov	r4, r2
  47 0008 1E46     		mov	r6, r3
  48 000a 289F     		ldr	r7, [sp, #160]
  49              		.loc 1 14 60 view .LVU2
  50 000c 154B     		ldr	r3, .L7
  51              	.LVL1:
  52              		.loc 1 14 60 view .LVU3
  53 000e 1B68     		ldr	r3, [r3]
  54 0010 2193     		str	r3, [sp, #132]
  55 0012 4FF00003 		mov	r3, #0
  15:crypto.c      ****   /* Encrypt like the most popular app with over 30 million users worldwide did
  16:crypto.c      ****      cf. https://www.ssl.com/article/nq-vault-app-not-as-secure-as-advertised/  */
  17:crypto.c      ****   uint8_t buf[128];
  56              		.loc 1 17 3 is_stmt 1 view .LVU4
  18:crypto.c      ****   memcpy(buf, plaintext, plaintext_len);
  57              		.loc 1 18 3 view .LVU5
  58 0016 01A8     		add	r0, sp, #4
  59              	.LVL2:
  60              		.loc 1 18 3 is_stmt 0 view .LVU6
  61 0018 FFF7FEFF 		bl	memcpy
  62              	.LVL3:
  19:crypto.c      ****   for(uint8_t i=0; i<128; i++) buf[i] ^= key[nonce[0] % 8];
  63              		.loc 1 19 3 is_stmt 1 view .LVU7
  64              	.LBB2:
  65              		.loc 1 19 7 view .LVU8
  66              		.loc 1 19 20 view .LVU9
  67              		.loc 1 19 55 is_stmt 0 view .LVU10
  68 001c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
  69 001e 03F00703 		and	r3, r3, #7
  70              		.loc 1 19 45 view .LVU11
  71 0022 17F803E0 		ldrb	lr, [r7, r3]	@ zero_extendqisi2
  72 0026 0DF10303 		add	r3, sp, #3
  73 002a 0DF1830C 		add	ip, sp, #131
  74              	.LVL4:
  75              	.L2:
  76              		.loc 1 19 32 is_stmt 1 discriminator 3 view .LVU12
  77              		.loc 1 19 39 is_stmt 0 discriminator 3 view .LVU13
  78 002e 13F8011F 		ldrb	r1, [r3, #1]!	@ zero_extendqisi2
  79              	.LVL5:
  80              		.loc 1 19 39 discriminator 3 view .LVU14
  81 0032 8EEA0101 		eor	r1, lr, r1
  82 0036 1970     		strb	r1, [r3]
  83              		.loc 1 19 27 is_stmt 1 discriminator 3 view .LVU15
  84              	.LVL6:
  85              		.loc 1 19 20 discriminator 3 view .LVU16
  86              		.loc 1 19 3 is_stmt 0 discriminator 3 view .LVU17
  87 0038 6345     		cmp	r3, ip
  88 003a F8D1     		bne	.L2
  89              	.LBE2:
  20:crypto.c      ****   *ciphertext = malloc(plaintext_len);
  90              		.loc 1 20 3 is_stmt 1 view .LVU18
  91              		.loc 1 20 17 is_stmt 0 view .LVU19
  92 003c 2046     		mov	r0, r4
  93 003e FFF7FEFF 		bl	malloc
  94              	.LVL7:
  95              		.loc 1 20 15 view .LVU20
  96 0042 2860     		str	r0, [r5]
  21:crypto.c      ****   memcpy(*ciphertext, buf, plaintext_len);
  97              		.loc 1 21 3 is_stmt 1 view .LVU21
  98 0044 2246     		mov	r2, r4
  99 0046 01A9     		add	r1, sp, #4
 100 0048 FFF7FEFF 		bl	memcpy
 101              	.LVL8:
  22:crypto.c      ****   return 0;
 102              		.loc 1 22 3 view .LVU22
  23:crypto.c      **** }
 103              		.loc 1 23 1 is_stmt 0 view .LVU23
 104 004c 054B     		ldr	r3, .L7
 105 004e 1A68     		ldr	r2, [r3]
 106 0050 219B     		ldr	r3, [sp, #132]
 107 0052 5A40     		eors	r2, r3, r2
 108 0054 4FF00003 		mov	r3, #0
 109 0058 02D1     		bne	.L6
 110 005a 0020     		movs	r0, #0
 111 005c 23B0     		add	sp, sp, #140
 112              	.LCFI2:
 113              		.cfi_remember_state
 114              		.cfi_def_cfa_offset 20
 115              		@ sp needed
 116 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 117              	.LVL9:
 118              	.L6:
 119              	.LCFI3:
 120              		.cfi_restore_state
 121              		.loc 1 23 1 view .LVU24
 122 0060 FFF7FEFF 		bl	__stack_chk_fail
 123              	.LVL10:
 124              	.L8:
 125              		.align	2
 126              	.L7:
 127 0064 00000000 		.word	__stack_chk_guard
 128              		.cfi_endproc
 129              	.LFE3:
 131              		.section	.text.getCiphertextLength,"ax",%progbits
 132              		.align	1
 133              		.global	getCiphertextLength
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	getCiphertextLength:
 139              	.LVL11:
 140              	.LFB4:
  24:crypto.c      **** 
  25:crypto.c      **** size_t getCiphertextLength(const size_t plaintext_len) {
 141              		.loc 1 25 56 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
  26:crypto.c      ****   return plaintext_len;
 146              		.loc 1 26 3 view .LVU26
  27:crypto.c      **** }
 147              		.loc 1 27 1 is_stmt 0 view .LVU27
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE4:
 152              		.text
 153              	.Letext0:
 154              		.file 2 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/mach
 155              		.file 3 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/
 156              		.file 4 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3
 157              		.file 5 "<built-in>"
 158              		.file 6 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/mall
DEFINED SYMBOLS
                            *ABS*:0000000000000000 crypto.c
     /tmp/cckg3fdb.s:19     .text.encrypt:0000000000000000 $t
     /tmp/cckg3fdb.s:25     .text.encrypt:0000000000000000 encrypt
     /tmp/cckg3fdb.s:127    .text.encrypt:0000000000000064 $d
     /tmp/cckg3fdb.s:132    .text.getCiphertextLength:0000000000000000 $t
     /tmp/cckg3fdb.s:138    .text.getCiphertextLength:0000000000000000 getCiphertextLength
                           .group:0000000000000000 wm4.0.718e8a15321e549965c6f9cbe0fa2c9d
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:0000000000000000 wm4.ieeefp.h.77.c88535c35f465c05b101960cf0179075
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.a54b2d5c07711bc7320a3fea9f12cb56
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.malloc.h.4.62bd13b8107d5245f60bd92bb5994838
                           .group:0000000000000000 wm4.malloc.h.152.f5d1d9a9aabeac59da0ef41ede16d2b0
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:0000000000000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78

UNDEFINED SYMBOLS
memcpy
malloc
__stack_chk_fail
__stack_chk_guard
