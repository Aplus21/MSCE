   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"randombytes_salsa20XMC_random.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.randombytes_salsa20XMC_random_rekey,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	randombytes_salsa20XMC_random_rekey:
  25              	.LVL0:
  26              	.LFB1:
  27              		.file 1 "randombytes_salsa20XMC_random.c"
   1:randombytes_salsa20XMC_random.c **** /*
   2:randombytes_salsa20XMC_random.c ****  * ISC License
   3:randombytes_salsa20XMC_random.c ****  *
   4:randombytes_salsa20XMC_random.c ****  * Copyright (c) 2018 TUM
   5:randombytes_salsa20XMC_random.c ****  * Author: Florian Wilde <florian.wilde@tum.de>
   6:randombytes_salsa20XMC_random.c ****  * Based on previous work published with libsodium.
   7:randombytes_salsa20XMC_random.c ****  *
   8:randombytes_salsa20XMC_random.c ****  * Permission to use, copy, modify, and/or distribute this software for any
   9:randombytes_salsa20XMC_random.c ****  * purpose with or without fee is hereby granted, provided that the above
  10:randombytes_salsa20XMC_random.c ****  * copyright notice and this permission notice appear in all copies.
  11:randombytes_salsa20XMC_random.c ****  *
  12:randombytes_salsa20XMC_random.c ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  13:randombytes_salsa20XMC_random.c ****  * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  14:randombytes_salsa20XMC_random.c ****  * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  15:randombytes_salsa20XMC_random.c ****  * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  16:randombytes_salsa20XMC_random.c ****  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  17:randombytes_salsa20XMC_random.c ****  * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  18:randombytes_salsa20XMC_random.c ****  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  19:randombytes_salsa20XMC_random.c ****  */
  20:randombytes_salsa20XMC_random.c **** 
  21:randombytes_salsa20XMC_random.c **** #include <stdlib.h>
  22:randombytes_salsa20XMC_random.c **** #include <sys/types.h>
  23:randombytes_salsa20XMC_random.c **** 
  24:randombytes_salsa20XMC_random.c **** #include <assert.h>
  25:randombytes_salsa20XMC_random.c **** #include <errno.h>
  26:randombytes_salsa20XMC_random.c **** #include <fcntl.h>
  27:randombytes_salsa20XMC_random.c **** #include <limits.h>
  28:randombytes_salsa20XMC_random.c **** #include <stdint.h>
  29:randombytes_salsa20XMC_random.c **** #include <stdlib.h>
  30:randombytes_salsa20XMC_random.c **** #include <string.h>
  31:randombytes_salsa20XMC_random.c **** #ifndef _MSC_VER
  32:randombytes_salsa20XMC_random.c **** # include <unistd.h>
  33:randombytes_salsa20XMC_random.c **** #endif
  34:randombytes_salsa20XMC_random.c **** 
  35:randombytes_salsa20XMC_random.c **** #include <sodium/crypto_core_salsa20.h> // "sodium/include/sodium/crypto_core_salsa20.h"
  36:randombytes_salsa20XMC_random.c **** #include <sodium/crypto_generichash.h> //"sodium/include/sodium/crypto_generichash.h"
  37:randombytes_salsa20XMC_random.c **** #include <sodium/crypto_stream_salsa20.h> //"sodium/include/sodium/crypto_stream_salsa20.h"
  38:randombytes_salsa20XMC_random.c **** #include <sodium/randombytes.h> //"sodium/include/sodium/randombytes.h"
  39:randombytes_salsa20XMC_random.c **** #include "randombytes_salsa20XMC_random.h"
  40:randombytes_salsa20XMC_random.c **** #include <sodium/utils.h> //"sodium/include/sodium/utils.h"
  41:randombytes_salsa20XMC_random.c **** 
  42:randombytes_salsa20XMC_random.c **** #define SALSA20_RANDOM_BLOCK_SIZE crypto_core_salsa20_OUTPUTBYTES
  43:randombytes_salsa20XMC_random.c **** #define HASH_BLOCK_SIZE 128U
  44:randombytes_salsa20XMC_random.c **** #define COMPILER_ASSERT(X) (void) sizeof(char[(X) ? 1 : -1])
  45:randombytes_salsa20XMC_random.c **** 
  46:randombytes_salsa20XMC_random.c **** #ifndef SSIZE_MAX
  47:randombytes_salsa20XMC_random.c **** # define SSIZE_MAX (SIZE_MAX / 2 - 1)
  48:randombytes_salsa20XMC_random.c **** #endif
  49:randombytes_salsa20XMC_random.c **** 
  50:randombytes_salsa20XMC_random.c **** typedef struct Salsa20Random_ {
  51:randombytes_salsa20XMC_random.c ****     size_t        rnd32_outleft;
  52:randombytes_salsa20XMC_random.c ****     int           random_data_source_fd;
  53:randombytes_salsa20XMC_random.c ****     int           initialized;
  54:randombytes_salsa20XMC_random.c ****     int           getrandom_available;
  55:randombytes_salsa20XMC_random.c ****     unsigned char key[crypto_stream_salsa20_KEYBYTES];
  56:randombytes_salsa20XMC_random.c ****     unsigned char rnd32[16U * SALSA20_RANDOM_BLOCK_SIZE];
  57:randombytes_salsa20XMC_random.c ****     uint64_t      nonce;
  58:randombytes_salsa20XMC_random.c **** #ifdef HAVE_GETPID
  59:randombytes_salsa20XMC_random.c ****     pid_t         pid;
  60:randombytes_salsa20XMC_random.c **** #endif
  61:randombytes_salsa20XMC_random.c **** } Salsa20Random;
  62:randombytes_salsa20XMC_random.c **** 
  63:randombytes_salsa20XMC_random.c **** static Salsa20Random stream = {
  64:randombytes_salsa20XMC_random.c ****     SODIUM_C99(.rnd32_outleft =) (size_t) 0U,
  65:randombytes_salsa20XMC_random.c ****     SODIUM_C99(.random_data_source_fd =) -1,
  66:randombytes_salsa20XMC_random.c ****     SODIUM_C99(.initialized =) 0,
  67:randombytes_salsa20XMC_random.c ****     SODIUM_C99(.getrandom_available =) 0
  68:randombytes_salsa20XMC_random.c **** };
  69:randombytes_salsa20XMC_random.c **** 
  70:randombytes_salsa20XMC_random.c **** static void
  71:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random_init(void)
  72:randombytes_salsa20XMC_random.c **** {
  73:randombytes_salsa20XMC_random.c ****     /* In lack of real time clock or /dev/urandom,
  74:randombytes_salsa20XMC_random.c ****      * use a hash of DSRAM1 as entropy source */
  75:randombytes_salsa20XMC_random.c ****     unsigned char hash[crypto_generichash_BYTES];
  76:randombytes_salsa20XMC_random.c ****     crypto_generichash(hash, sizeof hash, RANDOMBYTES_SALSA20XMC_PSRAM_START,\
  77:randombytes_salsa20XMC_random.c ****                        RANDOMBYTES_SALSA20XMC_PSRAM_SIZE, NULL, 0);
  78:randombytes_salsa20XMC_random.c ****     memcpy(&stream.nonce, &hash, sizeof(stream.nonce) < sizeof(hash) ? \
  79:randombytes_salsa20XMC_random.c ****                                  sizeof(stream.nonce) : sizeof(hash));
  80:randombytes_salsa20XMC_random.c **** 
  81:randombytes_salsa20XMC_random.c ****     assert(stream.nonce != (uint64_t) 0U);
  82:randombytes_salsa20XMC_random.c **** }
  83:randombytes_salsa20XMC_random.c **** 
  84:randombytes_salsa20XMC_random.c **** static void
  85:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random_rekey(const unsigned char * const mix)
  86:randombytes_salsa20XMC_random.c **** {
  28              		.loc 1 86 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  87:randombytes_salsa20XMC_random.c ****     unsigned char *key = stream.key;
  33              		.loc 1 87 5 view .LVU1
  88:randombytes_salsa20XMC_random.c ****     size_t         i;
  34              		.loc 1 88 5 view .LVU2
  89:randombytes_salsa20XMC_random.c **** 
  90:randombytes_salsa20XMC_random.c ****     for (i = (size_t) 0U; i < sizeof stream.key; i++) {
  35              		.loc 1 90 5 view .LVU3
  36              		.loc 1 90 27 view .LVU4
  37 0000 074A     		ldr	r2, .L4
  38 0002 02F10F03 		add	r3, r2, #15
  39 0006 0138     		subs	r0, r0, #1
  40              	.LVL1:
  41              		.loc 1 90 27 is_stmt 0 view .LVU5
  42 0008 02F12F0C 		add	ip, r2, #47
  43              	.LVL2:
  44              	.L2:
  91:randombytes_salsa20XMC_random.c ****         key[i] ^= mix[i];
  45              		.loc 1 91 9 is_stmt 1 discriminator 3 view .LVU6
  46              		.loc 1 91 16 is_stmt 0 discriminator 3 view .LVU7
  47 000c 13F8012F 		ldrb	r2, [r3, #1]!	@ zero_extendqisi2
  48              	.LVL3:
  49              		.loc 1 91 16 discriminator 3 view .LVU8
  50 0010 10F8011F 		ldrb	r1, [r0, #1]!	@ zero_extendqisi2
  51 0014 4A40     		eors	r2, r2, r1
  52 0016 1A70     		strb	r2, [r3]
  90:randombytes_salsa20XMC_random.c ****         key[i] ^= mix[i];
  53              		.loc 1 90 50 is_stmt 1 discriminator 3 view .LVU9
  54              	.LVL4:
  90:randombytes_salsa20XMC_random.c ****         key[i] ^= mix[i];
  55              		.loc 1 90 27 discriminator 3 view .LVU10
  90:randombytes_salsa20XMC_random.c ****         key[i] ^= mix[i];
  56              		.loc 1 90 5 is_stmt 0 discriminator 3 view .LVU11
  57 0018 6345     		cmp	r3, ip
  58 001a F7D1     		bne	.L2
  92:randombytes_salsa20XMC_random.c ****     }
  93:randombytes_salsa20XMC_random.c **** }
  59              		.loc 1 93 1 view .LVU12
  60 001c 7047     		bx	lr
  61              	.L5:
  62 001e 00BF     		.align	2
  63              	.L4:
  64 0020 00000000 		.word	.LANCHOR0
  65              		.cfi_endproc
  66              	.LFE1:
  68              		.section	.rodata.str1.4,"aMS",%progbits,1
  69              		.align	2
  70              	.LC0:
  71 0000 73616C73 		.ascii	"salsa20XMC\000"
  71      61323058 
  71      4D4300
  72              		.section	.text.randombytes_salsa20XMC_implementation_name,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	randombytes_salsa20XMC_implementation_name:
  79              	.LFB7:
  94:randombytes_salsa20XMC_random.c **** 
  95:randombytes_salsa20XMC_random.c **** static void
  96:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random_stir(void)
  97:randombytes_salsa20XMC_random.c **** {
  98:randombytes_salsa20XMC_random.c ****     /* constant to personalize the hash function */
  99:randombytes_salsa20XMC_random.c ****     const unsigned char hsigma[crypto_generichash_KEYBYTES] = {
 100:randombytes_salsa20XMC_random.c ****         0x54, 0x68, 0x69, 0x73, 0x49, 0x73, 0x4a, 0x75,
 101:randombytes_salsa20XMC_random.c ****         0x73, 0x74, 0x41, 0x54, 0x68, 0x69, 0x72, 0x74,
 102:randombytes_salsa20XMC_random.c ****         0x79, 0x54, 0x77, 0x6f, 0x42, 0x79, 0x74, 0x65,
 103:randombytes_salsa20XMC_random.c ****         0x73, 0x53, 0x65, 0x65, 0x64, 0x2e, 0x2e, 0x2e
 104:randombytes_salsa20XMC_random.c ****     };
 105:randombytes_salsa20XMC_random.c ****     unsigned char  m0[crypto_stream_salsa20_KEYBYTES + HASH_BLOCK_SIZE];
 106:randombytes_salsa20XMC_random.c ****     unsigned char *k0 = m0 + crypto_stream_salsa20_KEYBYTES;
 107:randombytes_salsa20XMC_random.c ****     size_t         sizeof_k0 = sizeof m0 - crypto_stream_salsa20_KEYBYTES;
 108:randombytes_salsa20XMC_random.c **** 
 109:randombytes_salsa20XMC_random.c ****     memset(stream.rnd32, 0, sizeof stream.rnd32);
 110:randombytes_salsa20XMC_random.c ****     stream.rnd32_outleft = (size_t) 0U;
 111:randombytes_salsa20XMC_random.c ****     if (stream.initialized == 0) {
 112:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_init();
 113:randombytes_salsa20XMC_random.c ****         stream.initialized = 1;
 114:randombytes_salsa20XMC_random.c ****     }
 115:randombytes_salsa20XMC_random.c ****     if (crypto_generichash(stream.key, sizeof stream.key, k0, sizeof_k0,
 116:randombytes_salsa20XMC_random.c ****                            hsigma, sizeof hsigma) != 0) {
 117:randombytes_salsa20XMC_random.c ****         abort(); /* LCOV_EXCL_LINE */
 118:randombytes_salsa20XMC_random.c ****     }
 119:randombytes_salsa20XMC_random.c ****     COMPILER_ASSERT(sizeof stream.key <= sizeof m0);
 120:randombytes_salsa20XMC_random.c ****     randombytes_salsa20XMC_random_rekey(m0);
 121:randombytes_salsa20XMC_random.c ****     sodium_memzero(m0, sizeof m0);
 122:randombytes_salsa20XMC_random.c **** #ifdef HAVE_GETPID
 123:randombytes_salsa20XMC_random.c ****     stream.pid = getpid();
 124:randombytes_salsa20XMC_random.c **** #endif
 125:randombytes_salsa20XMC_random.c **** }
 126:randombytes_salsa20XMC_random.c **** 
 127:randombytes_salsa20XMC_random.c **** static void
 128:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random_stir_if_needed(void)
 129:randombytes_salsa20XMC_random.c **** {
 130:randombytes_salsa20XMC_random.c **** #ifdef HAVE_GETPID
 131:randombytes_salsa20XMC_random.c ****     if (stream.initialized == 0) {
 132:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 133:randombytes_salsa20XMC_random.c ****     } else if (stream.pid != getpid()) {
 134:randombytes_salsa20XMC_random.c ****         abort();
 135:randombytes_salsa20XMC_random.c ****     }
 136:randombytes_salsa20XMC_random.c **** #else
 137:randombytes_salsa20XMC_random.c ****     if (stream.initialized == 0) {
 138:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 139:randombytes_salsa20XMC_random.c ****     }
 140:randombytes_salsa20XMC_random.c **** #endif
 141:randombytes_salsa20XMC_random.c **** }
 142:randombytes_salsa20XMC_random.c **** 
 143:randombytes_salsa20XMC_random.c **** static void
 144:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random_buf(void * const buf, const size_t size)
 145:randombytes_salsa20XMC_random.c **** {
 146:randombytes_salsa20XMC_random.c ****     size_t i;
 147:randombytes_salsa20XMC_random.c ****     int    ret;
 148:randombytes_salsa20XMC_random.c **** 
 149:randombytes_salsa20XMC_random.c ****     randombytes_salsa20XMC_random_stir_if_needed();
 150:randombytes_salsa20XMC_random.c ****     COMPILER_ASSERT(sizeof stream.nonce == crypto_stream_salsa20_NONCEBYTES);
 151:randombytes_salsa20XMC_random.c **** #ifdef ULONG_LONG_MAX
 152:randombytes_salsa20XMC_random.c ****     /* coverity[result_independent_of_operands] */
 153:randombytes_salsa20XMC_random.c ****     assert(size <= ULONG_LONG_MAX);
 154:randombytes_salsa20XMC_random.c **** #endif
 155:randombytes_salsa20XMC_random.c ****     ret = crypto_stream_salsa20((unsigned char *) buf, (unsigned long long) size,
 156:randombytes_salsa20XMC_random.c ****                                 (unsigned char *) &stream.nonce, stream.key);
 157:randombytes_salsa20XMC_random.c ****     assert(ret == 0);
 158:randombytes_salsa20XMC_random.c ****     for (i = 0U; i < sizeof size; i++) {
 159:randombytes_salsa20XMC_random.c ****         stream.key[i] ^= ((const unsigned char *) (const void *) &size)[i];
 160:randombytes_salsa20XMC_random.c ****     }
 161:randombytes_salsa20XMC_random.c ****     stream.nonce++;
 162:randombytes_salsa20XMC_random.c ****     crypto_stream_salsa20_xor(stream.key, stream.key, sizeof stream.key,
 163:randombytes_salsa20XMC_random.c ****                               (unsigned char *) &stream.nonce, stream.key);
 164:randombytes_salsa20XMC_random.c **** }
 165:randombytes_salsa20XMC_random.c **** 
 166:randombytes_salsa20XMC_random.c **** static uint32_t
 167:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random_getword(void)
 168:randombytes_salsa20XMC_random.c **** {
 169:randombytes_salsa20XMC_random.c ****     uint32_t val;
 170:randombytes_salsa20XMC_random.c ****     int      ret;
 171:randombytes_salsa20XMC_random.c **** 
 172:randombytes_salsa20XMC_random.c ****     COMPILER_ASSERT(sizeof stream.rnd32 >= (sizeof stream.key) + (sizeof val));
 173:randombytes_salsa20XMC_random.c ****     COMPILER_ASSERT(((sizeof stream.rnd32) - (sizeof stream.key))
 174:randombytes_salsa20XMC_random.c ****                     % sizeof val == (size_t) 0U);
 175:randombytes_salsa20XMC_random.c ****     if (stream.rnd32_outleft <= (size_t) 0U) {
 176:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir_if_needed();
 177:randombytes_salsa20XMC_random.c ****         COMPILER_ASSERT(sizeof stream.nonce == crypto_stream_salsa20_NONCEBYTES);
 178:randombytes_salsa20XMC_random.c ****         ret = crypto_stream_salsa20((unsigned char *) stream.rnd32,
 179:randombytes_salsa20XMC_random.c ****                                     (unsigned long long) sizeof stream.rnd32,
 180:randombytes_salsa20XMC_random.c ****                                     (unsigned char *) &stream.nonce,
 181:randombytes_salsa20XMC_random.c ****                                     stream.key);
 182:randombytes_salsa20XMC_random.c ****         assert(ret == 0);
 183:randombytes_salsa20XMC_random.c ****         stream.rnd32_outleft = (sizeof stream.rnd32) - (sizeof stream.key);
 184:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_rekey(&stream.rnd32[stream.rnd32_outleft]);
 185:randombytes_salsa20XMC_random.c ****         stream.nonce++;
 186:randombytes_salsa20XMC_random.c ****     }
 187:randombytes_salsa20XMC_random.c ****     stream.rnd32_outleft -= sizeof val;
 188:randombytes_salsa20XMC_random.c ****     memcpy(&val, &stream.rnd32[stream.rnd32_outleft], sizeof val);
 189:randombytes_salsa20XMC_random.c ****     memset(&stream.rnd32[stream.rnd32_outleft], 0, sizeof val);
 190:randombytes_salsa20XMC_random.c **** 
 191:randombytes_salsa20XMC_random.c ****     return val;
 192:randombytes_salsa20XMC_random.c **** }
 193:randombytes_salsa20XMC_random.c **** 
 194:randombytes_salsa20XMC_random.c **** static uint32_t
 195:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_random(void)
 196:randombytes_salsa20XMC_random.c **** {
 197:randombytes_salsa20XMC_random.c ****     return randombytes_salsa20XMC_random_getword();
 198:randombytes_salsa20XMC_random.c **** }
 199:randombytes_salsa20XMC_random.c **** 
 200:randombytes_salsa20XMC_random.c **** static const char *
 201:randombytes_salsa20XMC_random.c **** randombytes_salsa20XMC_implementation_name(void)
 202:randombytes_salsa20XMC_random.c **** {
  80              		.loc 1 202 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
 203:randombytes_salsa20XMC_random.c ****     return "salsa20XMC";
  85              		.loc 1 203 5 view .LVU14
 204:randombytes_salsa20XMC_random.c **** }
  86              		.loc 1 204 1 is_stmt 0 view .LVU15
  87 0000 0048     		ldr	r0, .L7
  88 0002 7047     		bx	lr
  89              	.L8:
  90              		.align	2
  91              	.L7:
  92 0004 00000000 		.word	.LC0
  93              		.cfi_endproc
  94              	.LFE7:
  96              		.section	.rodata.str1.4
  97 000b 00       		.align	2
  98              	.LC2:
  99 000c 73747265 		.ascii	"stream.nonce != (uint64_t) 0U\000"
  99      616D2E6E 
  99      6F6E6365 
  99      20213D20 
  99      2875696E 
 100 002a 0000     		.align	2
 101              	.LC3:
 102 002c 72616E64 		.ascii	"randombytes_salsa20XMC_random.c\000"
 102      6F6D6279 
 102      7465735F 
 102      73616C73 
 102      61323058 
 103              		.align	2
 104              	.LC1:
 105 004c 54686973 		.ascii	"ThisIsJustAThirtyTwoBytesSeed...\000"
 105      49734A75 
 105      73744154 
 105      68697274 
 105      7954776F 
 106              		.section	.text.randombytes_salsa20XMC_random_stir,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	randombytes_salsa20XMC_random_stir:
 113              	.LFB2:
  97:randombytes_salsa20XMC_random.c ****     /* constant to personalize the hash function */
 114              		.loc 1 97 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 200
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              	.LCFI0:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 4, -8
 122              		.cfi_offset 14, -4
 123 0002 B6B0     		sub	sp, sp, #216
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 224
  97:randombytes_salsa20XMC_random.c ****     /* constant to personalize the hash function */
 126              		.loc 1 97 1 is_stmt 0 view .LVU17
 127 0004 2D4B     		ldr	r3, .L19
 128 0006 1B68     		ldr	r3, [r3]
 129 0008 3593     		str	r3, [sp, #212]
 130 000a 4FF00003 		mov	r3, #0
  99:randombytes_salsa20XMC_random.c ****         0x54, 0x68, 0x69, 0x73, 0x49, 0x73, 0x4a, 0x75,
 131              		.loc 1 99 5 is_stmt 1 view .LVU18
  99:randombytes_salsa20XMC_random.c ****         0x54, 0x68, 0x69, 0x73, 0x49, 0x73, 0x4a, 0x75,
 132              		.loc 1 99 25 is_stmt 0 view .LVU19
 133 000e 0DF1140C 		add	ip, sp, #20
 134 0012 2B4C     		ldr	r4, .L19+4
 135 0014 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 136 0016 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 137 001a 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 138 001e 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 105:randombytes_salsa20XMC_random.c ****     unsigned char *k0 = m0 + crypto_stream_salsa20_KEYBYTES;
 139              		.loc 1 105 5 is_stmt 1 view .LVU20
 106:randombytes_salsa20XMC_random.c ****     size_t         sizeof_k0 = sizeof m0 - crypto_stream_salsa20_KEYBYTES;
 140              		.loc 1 106 5 view .LVU21
 141              	.LVL5:
 107:randombytes_salsa20XMC_random.c **** 
 142              		.loc 1 107 5 view .LVU22
 109:randombytes_salsa20XMC_random.c ****     stream.rnd32_outleft = (size_t) 0U;
 143              		.loc 1 109 5 view .LVU23
 144 0022 284C     		ldr	r4, .L19+8
 145 0024 4FF48062 		mov	r2, #1024
 146 0028 0021     		movs	r1, #0
 147 002a 04F13000 		add	r0, r4, #48
 148 002e FFF7FEFF 		bl	memset
 149              	.LVL6:
 110:randombytes_salsa20XMC_random.c ****     if (stream.initialized == 0) {
 150              		.loc 1 110 5 view .LVU24
 110:randombytes_salsa20XMC_random.c ****     if (stream.initialized == 0) {
 151              		.loc 1 110 26 is_stmt 0 view .LVU25
 152 0032 0023     		movs	r3, #0
 153 0034 2360     		str	r3, [r4]
 111:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_init();
 154              		.loc 1 111 5 is_stmt 1 view .LVU26
 111:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_init();
 155              		.loc 1 111 8 is_stmt 0 view .LVU27
 156 0036 A368     		ldr	r3, [r4, #8]
 157 0038 E3B1     		cbz	r3, .L15
 158              	.L10:
 115:randombytes_salsa20XMC_random.c ****                            hsigma, sizeof hsigma) != 0) {
 159              		.loc 1 115 5 is_stmt 1 view .LVU28
 115:randombytes_salsa20XMC_random.c ****                            hsigma, sizeof hsigma) != 0) {
 160              		.loc 1 115 9 is_stmt 0 view .LVU29
 161 003a 2021     		movs	r1, #32
 162 003c 0391     		str	r1, [sp, #12]
 163 003e 05AB     		add	r3, sp, #20
 164 0040 0293     		str	r3, [sp, #8]
 165 0042 8022     		movs	r2, #128
 166 0044 0023     		movs	r3, #0
 167 0046 CDE90023 		strd	r2, [sp]
 168 004a 15AA     		add	r2, sp, #84
 169              	.LVL7:
 115:randombytes_salsa20XMC_random.c ****                            hsigma, sizeof hsigma) != 0) {
 170              		.loc 1 115 9 view .LVU30
 171 004c 1E48     		ldr	r0, .L19+12
 172 004e FFF7FEFF 		bl	crypto_generichash
 173              	.LVL8:
 115:randombytes_salsa20XMC_random.c ****                            hsigma, sizeof hsigma) != 0) {
 174              		.loc 1 115 8 view .LVU31
 175 0052 78BB     		cbnz	r0, .L16
 119:randombytes_salsa20XMC_random.c ****     randombytes_salsa20XMC_random_rekey(m0);
 176              		.loc 1 119 5 is_stmt 1 view .LVU32
 120:randombytes_salsa20XMC_random.c ****     sodium_memzero(m0, sizeof m0);
 177              		.loc 1 120 5 view .LVU33
 178 0054 0DA8     		add	r0, sp, #52
 179 0056 FFF7FEFF 		bl	randombytes_salsa20XMC_random_rekey
 180              	.LVL9:
 121:randombytes_salsa20XMC_random.c **** #ifdef HAVE_GETPID
 181              		.loc 1 121 5 view .LVU34
 182 005a A021     		movs	r1, #160
 183 005c 0DA8     		add	r0, sp, #52
 184 005e FFF7FEFF 		bl	sodium_memzero
 185              	.LVL10:
 125:randombytes_salsa20XMC_random.c **** 
 186              		.loc 1 125 1 is_stmt 0 view .LVU35
 187 0062 164B     		ldr	r3, .L19
 188 0064 1A68     		ldr	r2, [r3]
 189 0066 359B     		ldr	r3, [sp, #212]
 190 0068 5A40     		eors	r2, r3, r2
 191 006a 4FF00003 		mov	r3, #0
 192 006e 23D1     		bne	.L17
 193 0070 36B0     		add	sp, sp, #216
 194              	.LCFI2:
 195              		.cfi_remember_state
 196              		.cfi_def_cfa_offset 8
 197              		@ sp needed
 198 0072 10BD     		pop	{r4, pc}
 199              	.LVL11:
 200              	.L15:
 201              	.LCFI3:
 202              		.cfi_restore_state
 112:randombytes_salsa20XMC_random.c ****         stream.initialized = 1;
 203              		.loc 1 112 9 is_stmt 1 view .LVU36
 204              	.LBB4:
 205              	.LBI4:
  71:randombytes_salsa20XMC_random.c **** {
 206              		.loc 1 71 1 view .LVU37
 207              	.LBB5:
  75:randombytes_salsa20XMC_random.c ****     crypto_generichash(hash, sizeof hash, RANDOMBYTES_SALSA20XMC_PSRAM_START,\
 208              		.loc 1 75 5 view .LVU38
  76:randombytes_salsa20XMC_random.c ****                        RANDOMBYTES_SALSA20XMC_PSRAM_SIZE, NULL, 0);
 209              		.loc 1 76 5 view .LVU39
 210 0074 0DAC     		add	r4, sp, #52
 211 0076 0393     		str	r3, [sp, #12]
 212 0078 0293     		str	r3, [sp, #8]
 213 007a 4FF48032 		mov	r2, #65536
 214 007e 0023     		movs	r3, #0
 215 0080 CDE90023 		strd	r2, [sp]
 216 0084 4FF08052 		mov	r2, #268435456
 217 0088 2021     		movs	r1, #32
 218 008a 2046     		mov	r0, r4
 219 008c FFF7FEFF 		bl	crypto_generichash
 220              	.LVL12:
  78:randombytes_salsa20XMC_random.c ****                                  sizeof(stream.nonce) : sizeof(hash));
 221              		.loc 1 78 5 view .LVU40
 222 0090 0E4B     		ldr	r3, .L19+16
 223 0092 94E80300 		ldm	r4, {r0, r1}
 224 0096 83E80300 		stm	r3, {r0, r1}
  81:randombytes_salsa20XMC_random.c **** }
 225              		.loc 1 81 5 view .LVU41
 226 009a 50EA0103 		orrs	r3, r0, r1
 227 009e 03D0     		beq	.L18
 228              	.LBE5:
 229              	.LBE4:
 113:randombytes_salsa20XMC_random.c ****     }
 230              		.loc 1 113 9 view .LVU42
 113:randombytes_salsa20XMC_random.c ****     }
 231              		.loc 1 113 28 is_stmt 0 view .LVU43
 232 00a0 084B     		ldr	r3, .L19+8
 233 00a2 0122     		movs	r2, #1
 234 00a4 9A60     		str	r2, [r3, #8]
 235 00a6 C8E7     		b	.L10
 236              	.L18:
 237              	.LBB7:
 238              	.LBB6:
  81:randombytes_salsa20XMC_random.c **** }
 239              		.loc 1 81 5 view .LVU44
 240 00a8 094B     		ldr	r3, .L19+20
 241 00aa 0A4A     		ldr	r2, .L19+24
 242 00ac 5121     		movs	r1, #81
 243 00ae 0A48     		ldr	r0, .L19+28
 244 00b0 FFF7FEFF 		bl	__assert_func
 245              	.LVL13:
 246              	.L16:
 247              	.LBE6:
 248              	.LBE7:
 117:randombytes_salsa20XMC_random.c ****     }
 249              		.loc 1 117 9 is_stmt 1 view .LVU45
 250 00b4 FFF7FEFF 		bl	abort
 251              	.LVL14:
 252              	.L17:
 125:randombytes_salsa20XMC_random.c **** 
 253              		.loc 1 125 1 is_stmt 0 view .LVU46
 254 00b8 FFF7FEFF 		bl	__stack_chk_fail
 255              	.LVL15:
 256              	.L20:
 257              		.align	2
 258              	.L19:
 259 00bc 00000000 		.word	__stack_chk_guard
 260 00c0 4C000000 		.word	.LC1
 261 00c4 00000000 		.word	.LANCHOR0
 262 00c8 10000000 		.word	.LANCHOR0+16
 263 00cc 30040000 		.word	.LANCHOR0+1072
 264 00d0 0C000000 		.word	.LC2
 265 00d4 00000000 		.word	.LANCHOR1
 266 00d8 2C000000 		.word	.LC3
 267              		.cfi_endproc
 268              	.LFE2:
 270              		.section	.rodata.str1.4
 271 006d 000000   		.align	2
 272              	.LC5:
 273 0070 72657420 		.ascii	"ret == 0\000"
 273      3D3D2030 
 273      00
 274              		.section	.text.randombytes_salsa20XMC_random_buf,"ax",%progbits
 275              		.align	1
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	randombytes_salsa20XMC_random_buf:
 281              	.LVL16:
 282              	.LFB4:
 145:randombytes_salsa20XMC_random.c ****     size_t i;
 283              		.loc 1 145 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 145:randombytes_salsa20XMC_random.c ****     size_t i;
 287              		.loc 1 145 1 is_stmt 0 view .LVU48
 288 0000 10B5     		push	{r4, lr}
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
 292              		.cfi_offset 14, -4
 293 0002 84B0     		sub	sp, sp, #16
 294              	.LCFI5:
 295              		.cfi_def_cfa_offset 24
 296 0004 0446     		mov	r4, r0
 297 0006 0391     		str	r1, [sp, #12]
 146:randombytes_salsa20XMC_random.c ****     int    ret;
 298              		.loc 1 146 5 is_stmt 1 view .LVU49
 147:randombytes_salsa20XMC_random.c **** 
 299              		.loc 1 147 5 view .LVU50
 149:randombytes_salsa20XMC_random.c ****     COMPILER_ASSERT(sizeof stream.nonce == crypto_stream_salsa20_NONCEBYTES);
 300              		.loc 1 149 5 view .LVU51
 301              	.LBB10:
 302              	.LBI10:
 128:randombytes_salsa20XMC_random.c **** {
 303              		.loc 1 128 1 view .LVU52
 304              	.LBB11:
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 305              		.loc 1 137 5 view .LVU53
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 306              		.loc 1 137 15 is_stmt 0 view .LVU54
 307 0008 1E4B     		ldr	r3, .L29
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 308              		.loc 1 137 8 view .LVU55
 309 000a 9B68     		ldr	r3, [r3, #8]
 310 000c 83B3     		cbz	r3, .L27
 311              	.LVL17:
 312              	.L22:
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 313              		.loc 1 137 8 view .LVU56
 314              	.LBE11:
 315              	.LBE10:
 150:randombytes_salsa20XMC_random.c **** #ifdef ULONG_LONG_MAX
 316              		.loc 1 150 5 is_stmt 1 view .LVU57
 153:randombytes_salsa20XMC_random.c **** #endif
 317              		.loc 1 153 5 view .LVU58
 155:randombytes_salsa20XMC_random.c ****                                 (unsigned char *) &stream.nonce, stream.key);
 318              		.loc 1 155 5 view .LVU59
 155:randombytes_salsa20XMC_random.c ****                                 (unsigned char *) &stream.nonce, stream.key);
 319              		.loc 1 155 11 is_stmt 0 view .LVU60
 320 000e 1D4B     		ldr	r3, .L29
 321 0010 03F11002 		add	r2, r3, #16
 322 0014 0192     		str	r2, [sp, #4]
 323 0016 03F58663 		add	r3, r3, #1072
 324 001a 0093     		str	r3, [sp]
 325 001c 039A     		ldr	r2, [sp, #12]
 326 001e 0023     		movs	r3, #0
 327 0020 2046     		mov	r0, r4
 328 0022 FFF7FEFF 		bl	crypto_stream_salsa20
 329              	.LVL18:
 157:randombytes_salsa20XMC_random.c ****     for (i = 0U; i < sizeof size; i++) {
 330              		.loc 1 157 5 is_stmt 1 view .LVU61
 331 0026 30BB     		cbnz	r0, .L28
 332 0028 1749     		ldr	r1, .L29+4
 333 002a 03AA     		add	r2, sp, #12
 334 002c 0DF1100C 		add	ip, sp, #16
 335              	.LVL19:
 336              	.L24:
 159:randombytes_salsa20XMC_random.c ****     }
 337              		.loc 1 159 9 discriminator 3 view .LVU62
 159:randombytes_salsa20XMC_random.c ****     }
 338              		.loc 1 159 23 is_stmt 0 discriminator 3 view .LVU63
 339 0030 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 159:randombytes_salsa20XMC_random.c ****     }
 340              		.loc 1 159 72 discriminator 3 view .LVU64
 341 0032 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 159:randombytes_salsa20XMC_random.c ****     }
 342              		.loc 1 159 23 discriminator 3 view .LVU65
 343 0036 4340     		eors	r3, r3, r0
 344 0038 01F8013B 		strb	r3, [r1], #1
 345              	.LVL20:
 158:randombytes_salsa20XMC_random.c ****         stream.key[i] ^= ((const unsigned char *) (const void *) &size)[i];
 346              		.loc 1 158 35 is_stmt 1 discriminator 3 view .LVU66
 158:randombytes_salsa20XMC_random.c ****         stream.key[i] ^= ((const unsigned char *) (const void *) &size)[i];
 347              		.loc 1 158 18 discriminator 3 view .LVU67
 158:randombytes_salsa20XMC_random.c ****         stream.key[i] ^= ((const unsigned char *) (const void *) &size)[i];
 348              		.loc 1 158 5 is_stmt 0 discriminator 3 view .LVU68
 349 003c 6245     		cmp	r2, ip
 350 003e F7D1     		bne	.L24
 161:randombytes_salsa20XMC_random.c ****     crypto_stream_salsa20_xor(stream.key, stream.key, sizeof stream.key,
 351              		.loc 1 161 5 is_stmt 1 view .LVU69
 161:randombytes_salsa20XMC_random.c ****     crypto_stream_salsa20_xor(stream.key, stream.key, sizeof stream.key,
 352              		.loc 1 161 17 is_stmt 0 view .LVU70
 353 0040 1048     		ldr	r0, .L29
 354 0042 00F58662 		add	r2, r0, #1072
 355 0046 D0F83034 		ldr	r3, [r0, #1072]
 356 004a D0F83414 		ldr	r1, [r0, #1076]
 357              	.LVL21:
 161:randombytes_salsa20XMC_random.c ****     crypto_stream_salsa20_xor(stream.key, stream.key, sizeof stream.key,
 358              		.loc 1 161 17 view .LVU71
 359 004e 0133     		adds	r3, r3, #1
 360 0050 41F10001 		adc	r1, r1, #0
 361 0054 C0F83034 		str	r3, [r0, #1072]
 362 0058 C0F83414 		str	r1, [r0, #1076]
 162:randombytes_salsa20XMC_random.c ****                               (unsigned char *) &stream.nonce, stream.key);
 363              		.loc 1 162 5 is_stmt 1 view .LVU72
 364 005c 1030     		adds	r0, r0, #16
 365 005e 0190     		str	r0, [sp, #4]
 366 0060 0092     		str	r2, [sp]
 367 0062 2022     		movs	r2, #32
 368 0064 0023     		movs	r3, #0
 369 0066 0146     		mov	r1, r0
 370 0068 FFF7FEFF 		bl	crypto_stream_salsa20_xor
 371              	.LVL22:
 164:randombytes_salsa20XMC_random.c **** 
 372              		.loc 1 164 1 is_stmt 0 view .LVU73
 373 006c 04B0     		add	sp, sp, #16
 374              	.LCFI6:
 375              		.cfi_remember_state
 376              		.cfi_def_cfa_offset 8
 377              		@ sp needed
 378 006e 10BD     		pop	{r4, pc}
 379              	.LVL23:
 380              	.L27:
 381              	.LCFI7:
 382              		.cfi_restore_state
 383              	.LBB13:
 384              	.LBB12:
 138:randombytes_salsa20XMC_random.c ****     }
 385              		.loc 1 138 9 is_stmt 1 view .LVU74
 386 0070 FFF7FEFF 		bl	randombytes_salsa20XMC_random_stir
 387              	.LVL24:
 138:randombytes_salsa20XMC_random.c ****     }
 388              		.loc 1 138 9 is_stmt 0 view .LVU75
 389 0074 CBE7     		b	.L22
 390              	.LVL25:
 391              	.L28:
 138:randombytes_salsa20XMC_random.c ****     }
 392              		.loc 1 138 9 view .LVU76
 393              	.LBE12:
 394              	.LBE13:
 157:randombytes_salsa20XMC_random.c ****     for (i = 0U; i < sizeof size; i++) {
 395              		.loc 1 157 5 discriminator 1 view .LVU77
 396 0076 054B     		ldr	r3, .L29+8
 397 0078 054A     		ldr	r2, .L29+12
 398 007a 9D21     		movs	r1, #157
 399 007c 0548     		ldr	r0, .L29+16
 400              	.LVL26:
 157:randombytes_salsa20XMC_random.c ****     for (i = 0U; i < sizeof size; i++) {
 401              		.loc 1 157 5 discriminator 1 view .LVU78
 402 007e FFF7FEFF 		bl	__assert_func
 403              	.LVL27:
 404              	.L30:
 405 0082 00BF     		.align	2
 406              	.L29:
 407 0084 00000000 		.word	.LANCHOR0
 408 0088 10000000 		.word	.LANCHOR0+16
 409 008c 70000000 		.word	.LC5
 410 0090 24000000 		.word	.LANCHOR1+36
 411 0094 2C000000 		.word	.LC3
 412              		.cfi_endproc
 413              	.LFE4:
 415              		.section	.text.randombytes_salsa20XMC_random,"ax",%progbits
 416              		.align	1
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 421              	randombytes_salsa20XMC_random:
 422              	.LFB6:
 196:randombytes_salsa20XMC_random.c ****     return randombytes_salsa20XMC_random_getword();
 423              		.loc 1 196 1 is_stmt 1 view -0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 10B5     		push	{r4, lr}
 428              	.LCFI8:
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 4, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              	.LCFI9:
 434              		.cfi_def_cfa_offset 16
 197:randombytes_salsa20XMC_random.c **** }
 435              		.loc 1 197 5 view .LVU80
 436              	.LBB18:
 437              	.LBI18:
 167:randombytes_salsa20XMC_random.c **** {
 438              		.loc 1 167 1 view .LVU81
 439              	.LBB19:
 169:randombytes_salsa20XMC_random.c ****     int      ret;
 440              		.loc 1 169 5 view .LVU82
 170:randombytes_salsa20XMC_random.c **** 
 441              		.loc 1 170 5 view .LVU83
 172:randombytes_salsa20XMC_random.c ****     COMPILER_ASSERT(((sizeof stream.rnd32) - (sizeof stream.key))
 442              		.loc 1 172 5 view .LVU84
 173:randombytes_salsa20XMC_random.c ****                     % sizeof val == (size_t) 0U);
 443              		.loc 1 173 5 view .LVU85
 175:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir_if_needed();
 444              		.loc 1 175 5 view .LVU86
 175:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir_if_needed();
 445              		.loc 1 175 15 is_stmt 0 view .LVU87
 446 0004 1C4B     		ldr	r3, .L38
 175:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir_if_needed();
 447              		.loc 1 175 8 view .LVU88
 448 0006 1B68     		ldr	r3, [r3]
 449 0008 1BBB     		cbnz	r3, .L32
 176:randombytes_salsa20XMC_random.c ****         COMPILER_ASSERT(sizeof stream.nonce == crypto_stream_salsa20_NONCEBYTES);
 450              		.loc 1 176 9 is_stmt 1 view .LVU89
 451              	.LBB20:
 452              	.LBI20:
 128:randombytes_salsa20XMC_random.c **** {
 453              		.loc 1 128 1 view .LVU90
 454              	.LBB21:
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 455              		.loc 1 137 5 view .LVU91
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 456              		.loc 1 137 15 is_stmt 0 view .LVU92
 457 000a 1B4B     		ldr	r3, .L38
 137:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_stir();
 458              		.loc 1 137 8 view .LVU93
 459 000c 9B68     		ldr	r3, [r3, #8]
 460 000e 53B3     		cbz	r3, .L36
 461              	.L33:
 462              	.LBE21:
 463              	.LBE20:
 177:randombytes_salsa20XMC_random.c ****         ret = crypto_stream_salsa20((unsigned char *) stream.rnd32,
 464              		.loc 1 177 9 is_stmt 1 view .LVU94
 178:randombytes_salsa20XMC_random.c ****                                     (unsigned long long) sizeof stream.rnd32,
 465              		.loc 1 178 9 view .LVU95
 178:randombytes_salsa20XMC_random.c ****                                     (unsigned long long) sizeof stream.rnd32,
 466              		.loc 1 178 15 is_stmt 0 view .LVU96
 467 0010 1948     		ldr	r0, .L38
 468 0012 00F11003 		add	r3, r0, #16
 469 0016 0193     		str	r3, [sp, #4]
 470 0018 00F58663 		add	r3, r0, #1072
 471 001c 0093     		str	r3, [sp]
 472 001e 4FF48062 		mov	r2, #1024
 473 0022 0023     		movs	r3, #0
 474 0024 3030     		adds	r0, r0, #48
 475 0026 FFF7FEFF 		bl	crypto_stream_salsa20
 476              	.LVL28:
 182:randombytes_salsa20XMC_random.c ****         stream.rnd32_outleft = (sizeof stream.rnd32) - (sizeof stream.key);
 477              		.loc 1 182 9 is_stmt 1 view .LVU97
 478 002a F8B9     		cbnz	r0, .L37
 183:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_rekey(&stream.rnd32[stream.rnd32_outleft]);
 479              		.loc 1 183 9 view .LVU98
 183:randombytes_salsa20XMC_random.c ****         randombytes_salsa20XMC_random_rekey(&stream.rnd32[stream.rnd32_outleft]);
 480              		.loc 1 183 30 is_stmt 0 view .LVU99
 481 002c 124C     		ldr	r4, .L38
 482 002e 4FF47873 		mov	r3, #992
 483 0032 2360     		str	r3, [r4]
 184:randombytes_salsa20XMC_random.c ****         stream.nonce++;
 484              		.loc 1 184 9 is_stmt 1 view .LVU100
 485 0034 04F58260 		add	r0, r4, #1040
 486              	.LVL29:
 184:randombytes_salsa20XMC_random.c ****         stream.nonce++;
 487              		.loc 1 184 9 is_stmt 0 view .LVU101
 488 0038 FFF7FEFF 		bl	randombytes_salsa20XMC_random_rekey
 489              	.LVL30:
 185:randombytes_salsa20XMC_random.c ****     }
 490              		.loc 1 185 9 is_stmt 1 view .LVU102
 185:randombytes_salsa20XMC_random.c ****     }
 491              		.loc 1 185 21 is_stmt 0 view .LVU103
 492 003c D4F83034 		ldr	r3, [r4, #1072]
 493 0040 D4F83424 		ldr	r2, [r4, #1076]
 494 0044 0133     		adds	r3, r3, #1
 495 0046 42F10002 		adc	r2, r2, #0
 496 004a C4F83034 		str	r3, [r4, #1072]
 497 004e C4F83424 		str	r2, [r4, #1076]
 498              	.L32:
 187:randombytes_salsa20XMC_random.c ****     memcpy(&val, &stream.rnd32[stream.rnd32_outleft], sizeof val);
 499              		.loc 1 187 5 is_stmt 1 view .LVU104
 187:randombytes_salsa20XMC_random.c ****     memcpy(&val, &stream.rnd32[stream.rnd32_outleft], sizeof val);
 500              		.loc 1 187 26 is_stmt 0 view .LVU105
 501 0052 094A     		ldr	r2, .L38
 502 0054 1368     		ldr	r3, [r2]
 503 0056 191F     		subs	r1, r3, #4
 504 0058 1160     		str	r1, [r2]
 188:randombytes_salsa20XMC_random.c ****     memset(&stream.rnd32[stream.rnd32_outleft], 0, sizeof val);
 505              		.loc 1 188 5 is_stmt 1 view .LVU106
 188:randombytes_salsa20XMC_random.c ****     memset(&stream.rnd32[stream.rnd32_outleft], 0, sizeof val);
 506              		.loc 1 188 18 is_stmt 0 view .LVU107
 507 005a 2C33     		adds	r3, r3, #44
 508 005c D058     		ldr	r0, [r2, r3]	@ unaligned
 509              	.LVL31:
 189:randombytes_salsa20XMC_random.c **** 
 510              		.loc 1 189 5 is_stmt 1 view .LVU108
 511 005e 0021     		movs	r1, #0
 512 0060 D150     		str	r1, [r2, r3]	@ unaligned
 191:randombytes_salsa20XMC_random.c **** }
 513              		.loc 1 191 5 view .LVU109
 514              	.LBE19:
 515              	.LBE18:
 198:randombytes_salsa20XMC_random.c **** 
 516              		.loc 1 198 1 is_stmt 0 view .LVU110
 517 0062 02B0     		add	sp, sp, #8
 518              	.LCFI10:
 519              		.cfi_remember_state
 520              		.cfi_def_cfa_offset 8
 521              		@ sp needed
 522 0064 10BD     		pop	{r4, pc}
 523              	.LVL32:
 524              	.L36:
 525              	.LCFI11:
 526              		.cfi_restore_state
 527              	.LBB25:
 528              	.LBB24:
 529              	.LBB23:
 530              	.LBB22:
 138:randombytes_salsa20XMC_random.c ****     }
 531              		.loc 1 138 9 is_stmt 1 view .LVU111
 532 0066 FFF7FEFF 		bl	randombytes_salsa20XMC_random_stir
 533              	.LVL33:
 534 006a D1E7     		b	.L33
 535              	.LVL34:
 536              	.L37:
 138:randombytes_salsa20XMC_random.c ****     }
 537              		.loc 1 138 9 is_stmt 0 view .LVU112
 538              	.LBE22:
 539              	.LBE23:
 182:randombytes_salsa20XMC_random.c ****         stream.rnd32_outleft = (sizeof stream.rnd32) - (sizeof stream.key);
 540              		.loc 1 182 9 view .LVU113
 541 006c 034B     		ldr	r3, .L38+4
 542 006e 044A     		ldr	r2, .L38+8
 543 0070 B621     		movs	r1, #182
 544 0072 0448     		ldr	r0, .L38+12
 545              	.LVL35:
 182:randombytes_salsa20XMC_random.c ****         stream.rnd32_outleft = (sizeof stream.rnd32) - (sizeof stream.key);
 546              		.loc 1 182 9 view .LVU114
 547 0074 FFF7FEFF 		bl	__assert_func
 548              	.LVL36:
 549              	.L39:
 550              		.align	2
 551              	.L38:
 552 0078 00000000 		.word	.LANCHOR0
 553 007c 70000000 		.word	.LC5
 554 0080 48000000 		.word	.LANCHOR1+72
 555 0084 2C000000 		.word	.LC3
 556              	.LBE24:
 557              	.LBE25:
 558              		.cfi_endproc
 559              	.LFE6:
 561              		.global	randombytes_salsa20XMC_implementation
 562              		.section	.rodata
 563              		.align	2
 564              		.set	.LANCHOR1,. + 0
 567              	__func__.1:
 568 0000 72616E64 		.ascii	"randombytes_salsa20XMC_random_init\000"
 568      6F6D6279 
 568      7465735F 
 568      73616C73 
 568      61323058 
 569 0023 00       		.space	1
 572              	__func__.2:
 573 0024 72616E64 		.ascii	"randombytes_salsa20XMC_random_buf\000"
 573      6F6D6279 
 573      7465735F 
 573      73616C73 
 573      61323058 
 574 0046 0000     		.space	2
 577              	__func__.0:
 578 0048 72616E64 		.ascii	"randombytes_salsa20XMC_random_getword\000"
 578      6F6D6279 
 578      7465735F 
 578      73616C73 
 578      61323058 
 579              		.data
 580              		.align	3
 581              		.set	.LANCHOR0,. + 0
 584              	stream:
 585 0000 00000000 		.word	0
 586 0004 FFFFFFFF 		.word	-1
 587 0008 00000000 		.word	0
 588 000c 00000000 		.word	0
 589 0010 00000000 		.space	1064
 589      00000000 
 589      00000000 
 589      00000000 
 589      00000000 
 592              	randombytes_salsa20XMC_implementation:
 593 0438 00000000 		.word	randombytes_salsa20XMC_implementation_name
 594 043c 00000000 		.word	randombytes_salsa20XMC_random
 595 0440 00000000 		.word	randombytes_salsa20XMC_random_stir
 596 0444 00000000 		.word	0
 597 0448 00000000 		.word	randombytes_salsa20XMC_random_buf
 598 044c 00000000 		.word	0
 599              		.text
 600              	.Letext0:
 601              		.file 2 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3
 602              		.file 3 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/mach
 603              		.file 4 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/
 604              		.file 5 "sodium/include/sodium/randombytes.h"
 605              		.file 6 "sodium/include/sodium/crypto_stream_salsa20.h"
 606              		.file 7 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/asse
 607              		.file 8 "sodium/include/sodium/crypto_generichash.h"
 608              		.file 9 "sodium/include/sodium/utils.h"
 609              		.file 10 "/nas/ei/share/tools/gcc/gcc-arm/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/std
 610              		.file 11 "randombytes_salsa20XMC_random.h"
 611              		.file 12 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 randombytes_salsa20XMC_random.c
     /tmp/ccD7fwc7.s:19     .text.randombytes_salsa20XMC_random_rekey:0000000000000000 $t
     /tmp/ccD7fwc7.s:24     .text.randombytes_salsa20XMC_random_rekey:0000000000000000 randombytes_salsa20XMC_random_rekey
     /tmp/ccD7fwc7.s:64     .text.randombytes_salsa20XMC_random_rekey:0000000000000020 $d
     /tmp/ccD7fwc7.s:69     .rodata.str1.4:0000000000000000 $d
     /tmp/ccD7fwc7.s:73     .text.randombytes_salsa20XMC_implementation_name:0000000000000000 $t
     /tmp/ccD7fwc7.s:78     .text.randombytes_salsa20XMC_implementation_name:0000000000000000 randombytes_salsa20XMC_implementation_name
     /tmp/ccD7fwc7.s:92     .text.randombytes_salsa20XMC_implementation_name:0000000000000004 $d
     /tmp/ccD7fwc7.s:107    .text.randombytes_salsa20XMC_random_stir:0000000000000000 $t
     /tmp/ccD7fwc7.s:112    .text.randombytes_salsa20XMC_random_stir:0000000000000000 randombytes_salsa20XMC_random_stir
     /tmp/ccD7fwc7.s:259    .text.randombytes_salsa20XMC_random_stir:00000000000000bc $d
     /tmp/ccD7fwc7.s:275    .text.randombytes_salsa20XMC_random_buf:0000000000000000 $t
     /tmp/ccD7fwc7.s:280    .text.randombytes_salsa20XMC_random_buf:0000000000000000 randombytes_salsa20XMC_random_buf
     /tmp/ccD7fwc7.s:407    .text.randombytes_salsa20XMC_random_buf:0000000000000084 $d
     /tmp/ccD7fwc7.s:416    .text.randombytes_salsa20XMC_random:0000000000000000 $t
     /tmp/ccD7fwc7.s:421    .text.randombytes_salsa20XMC_random:0000000000000000 randombytes_salsa20XMC_random
     /tmp/ccD7fwc7.s:552    .text.randombytes_salsa20XMC_random:0000000000000078 $d
     /tmp/ccD7fwc7.s:592    .data:0000000000000438 randombytes_salsa20XMC_implementation
     /tmp/ccD7fwc7.s:563    .rodata:0000000000000000 $d
     /tmp/ccD7fwc7.s:567    .rodata:0000000000000000 __func__.1
     /tmp/ccD7fwc7.s:572    .rodata:0000000000000024 __func__.2
     /tmp/ccD7fwc7.s:577    .rodata:0000000000000048 __func__.0
     /tmp/ccD7fwc7.s:580    .data:0000000000000000 $d
     /tmp/ccD7fwc7.s:584    .data:0000000000000000 stream
                           .group:0000000000000000 wm4.0.718e8a15321e549965c6f9cbe0fa2c9d
                           .group:0000000000000000 wm4.ieeefp.h.77.c88535c35f465c05b101960cf0179075
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.newlib.h.18.1c9fedb6b3cd797cff253cc0fd593ef2
                           .group:0000000000000000 wm4.features.h.22.026edb2397769f4ae13f35900dbdb560
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.a54b2d5c07711bc7320a3fea9f12cb56
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:0000000000000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:0000000000000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.assert.h.11.7fe9eb241be6b0fee772a1e693b81ae3
                           .group:0000000000000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:0000000000000000 wm4.errno.h.9.1ecd7b1049497a0ab61da0f6cbd4b0c6
                           .group:0000000000000000 wm4._default_fcntl.h.6.791f38f41eee7843f224ce48f47caa9b
                           .group:0000000000000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:0000000000000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:0000000000000000 wm4.time.h.142.403dcded079b6de6a2d2f21a34c2ae96
                           .group:0000000000000000 wm4.stat.h.54.5a9b823658423102e7a8de4ed089eedc
                           .group:0000000000000000 wm4.fcntl.h.9.9336f33d7f5028f694c75e6e224e0cf7
                           .group:0000000000000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:0000000000000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:0000000000000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:0000000000000000 wm4.unistd.h.2.39165d5b7784d1815ef4b0c4be6df560
                           .group:0000000000000000 wm4.unistd.h.170.da6e816043042c61475c2b1f58468b37
                           .group:0000000000000000 wm4.export.h.3.069642e50a739d7e8bd572e0f5b91055
                           .group:0000000000000000 wm4.crypto_core_salsa20.h.11.7ce30578633b77708df2486e23cf2d41
                           .group:0000000000000000 wm4.crypto_generichash_blake2b.h.38.4b6d675038c455959c90c43a75693d35
                           .group:0000000000000000 wm4.crypto_generichash.h.16.771391b6badc9219de7753c54a91592a
                           .group:0000000000000000 wm4.crypto_stream_salsa20.h.23.fc01df25aec77276d8dd631cf7c6b2db
                           .group:0000000000000000 wm4.randombytes.h.28.d92c4e5a57bf52557a9782c27b663a62
                           .group:0000000000000000 wm4.randombytes_salsa20XMC_random.h.30.c255d9afffd6579bce6c1fffc9331283
                           .group:0000000000000000 wm4.utils.h.17.31ca9da2b3c3d17cb1ce98c0f528b530

UNDEFINED SYMBOLS
memset
crypto_generichash
sodium_memzero
__assert_func
abort
__stack_chk_fail
__stack_chk_guard
crypto_stream_salsa20
crypto_stream_salsa20_xor
